<?xml version="1.0" encoding="utf-8"?>
<xs:schema id="qmsDataSet" targetNamespace="http://tempuri.org/qmsDataSet.xsd" xmlns:mstns="http://tempuri.org/qmsDataSet.xsd" xmlns="http://tempuri.org/qmsDataSet.xsd" xmlns:xs="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata" xmlns:msprop="urn:schemas-microsoft-com:xml-msprop" attributeFormDefault="qualified" elementFormDefault="qualified">
  <xs:annotation>
    <xs:appinfo source="urn:schemas-microsoft-com:xml-msdatasource">
      <DataSource DefaultConnectionIndex="0" FunctionsComponentName="QueriesTableAdapter" Modifier="AutoLayout, AnsiClass, Class, Public" SchemaSerializationMode="IncludeSchema" xmlns="urn:schemas-microsoft-com:xml-msdatasource">
        <Connections>
          <Connection AppSettingsObjectName="Settings" AppSettingsPropertyName="qmsConnectionString" ConnectionStringObject="" IsAppSettingsProperty="true" Modifier="Assembly" Name="qmsConnectionString (Settings)" ParameterPrefix="@" PropertyReference="ApplicationSettings.QMS.Properties.Settings.GlobalReference.Default.qmsConnectionString" Provider="System.Data.SqlClient" />
        </Connections>
        <Tables>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CounterTableAdapter" GeneratorDataComponentClassName="CounterTableAdapter" Name="Counter" UserDataComponentName="CounterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qmsConnectionString (Settings)" DbObjectName="qms.dbo.Counter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Counter] WHERE (([IdCounter] = @Original_IdCounter) AND ([NameServices] = @Original_NameServices))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_IdCounter" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IdCounter" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameServices" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameServices" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Counter] ([IdCounter], [NameServices]) VALUES (@IdCounter, @NameServices);
SELECT IdCounter, NameServices FROM Counter WHERE (IdCounter = @IdCounter)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@IdCounter" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IdCounter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameServices" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameServices" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdCounter, NameServices FROM dbo.Counter</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Counter] SET [IdCounter] = @IdCounter, [NameServices] = @NameServices WHERE (([IdCounter] = @Original_IdCounter) AND ([NameServices] = @Original_NameServices));
SELECT IdCounter, NameServices FROM Counter WHERE (IdCounter = @IdCounter)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@IdCounter" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IdCounter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameServices" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameServices" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_IdCounter" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="IdCounter" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameServices" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameServices" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdCounter" DataSetColumn="IdCounter" />
              <Mapping SourceColumn="NameServices" DataSetColumn="NameServices" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Counter_CustomerTableAdapter" GeneratorDataComponentClassName="Counter_CustomerTableAdapter" Name="Counter_Customer" UserDataComponentName="Counter_CustomerTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qmsConnectionString (Settings)" DbObjectName="qms.dbo.Counter_Customer" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Counter_Customer] ([SCounter], [IdCustomer]) VALUES (@SCounter, @IdCustomer)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SCounter" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SCounter" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdCustomer" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCustomer" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT SCounter, IdCustomer FROM dbo.Counter_Customer</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="SCounter" DataSetColumn="SCounter" />
              <Mapping SourceColumn="IdCustomer" DataSetColumn="IdCustomer" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="CustomerCurrentTableAdapter" GeneratorDataComponentClassName="CustomerCurrentTableAdapter" Name="CustomerCurrent" UserDataComponentName="CustomerCurrentTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qmsConnectionString (Settings)" DbObjectName="qms.dbo.CustomerCurrent" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[CustomerCurrent] WHERE (([IdConstant] = @Original_IdConstant) AND ([IdCurrent] = @Original_IdCurrent))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdConstant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdConstant" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdCurrent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCurrent" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[CustomerCurrent] ([IdConstant], [IdCurrent]) VALUES (@IdConstant, @IdCurrent);
SELECT IdConstant, IdCurrent FROM CustomerCurrent WHERE (IdConstant = @IdConstant)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdConstant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdConstant" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdCurrent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCurrent" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdConstant, IdCurrent FROM dbo.CustomerCurrent</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[CustomerCurrent] SET [IdConstant] = @IdConstant, [IdCurrent] = @IdCurrent WHERE (([IdConstant] = @Original_IdConstant) AND ([IdCurrent] = @Original_IdCurrent));
SELECT IdConstant, IdCurrent FROM CustomerCurrent WHERE (IdConstant = @IdConstant)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdConstant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdConstant" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdCurrent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCurrent" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdConstant" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdConstant" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdCurrent" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdCurrent" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdConstant" DataSetColumn="IdConstant" />
              <Mapping SourceColumn="IdCurrent" DataSetColumn="IdCurrent" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="EmployeeTableAdapter" GeneratorDataComponentClassName="EmployeeTableAdapter" Name="Employee" UserDataComponentName="EmployeeTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qmsConnectionString (Settings)" DbObjectName="qms.dbo.Employee" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <DeleteCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>DELETE FROM [dbo].[Employee] WHERE (([IdEmployees] = @Original_IdEmployees) AND ([NameEmployees] = @Original_NameEmployees))</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdEmployees" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdEmployees" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameEmployees" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameEmployees" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </DeleteCommand>
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employee] ([IdEmployees], [NameEmployees]) VALUES (@IdEmployees, @NameEmployees);
SELECT IdEmployees, NameEmployees FROM Employee WHERE (IdEmployees = @IdEmployees)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdEmployees" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdEmployees" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameEmployees" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameEmployees" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdEmployees, NameEmployees FROM dbo.Employee</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
                <UpdateCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>UPDATE [dbo].[Employee] SET [IdEmployees] = @IdEmployees, [NameEmployees] = @NameEmployees WHERE (([IdEmployees] = @Original_IdEmployees) AND ([NameEmployees] = @Original_NameEmployees));
SELECT IdEmployees, NameEmployees FROM Employee WHERE (IdEmployees = @IdEmployees)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdEmployees" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdEmployees" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@NameEmployees" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameEmployees" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@Original_IdEmployees" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdEmployees" SourceColumnNullMapping="false" SourceVersion="Original" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@Original_NameEmployees" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="NameEmployees" SourceColumnNullMapping="false" SourceVersion="Original" />
                    </Parameters>
                  </DbCommand>
                </UpdateCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdEmployees" DataSetColumn="IdEmployees" />
              <Mapping SourceColumn="NameEmployees" DataSetColumn="NameEmployees" />
            </Mappings>
            <Sources />
          </TableAdapter>
          <TableAdapter BaseClass="System.ComponentModel.Component" DataAccessorModifier="AutoLayout, AnsiClass, Class, Public" DataAccessorName="Employee_CounterTableAdapter" GeneratorDataComponentClassName="Employee_CounterTableAdapter" Name="Employee_Counter" UserDataComponentName="Employee_CounterTableAdapter">
            <MainSource>
              <DbSource ConnectionRef="qmsConnectionString (Settings)" DbObjectName="qms.dbo.Employee_Counter" DbObjectType="Table" FillMethodModifier="Public" FillMethodName="Fill" GenerateMethods="Both" GenerateShortCommands="true" GeneratorGetMethodName="GetData" GeneratorSourceName="Fill" GetMethodModifier="Public" GetMethodName="GetData" QueryType="Rowset" ScalarCallRetval="System.Object, mscorlib, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" UseOptimisticConcurrency="true" UserGetMethodName="GetData" UserSourceName="Fill">
                <InsertCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>INSERT INTO [dbo].[Employee_Counter] ([IdEmployees], [SCounter]) VALUES (@IdEmployees, @SCounter)</CommandText>
                    <Parameters>
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="Int32" Direction="Input" ParameterName="@IdEmployees" Precision="0" ProviderType="Int" Scale="0" Size="0" SourceColumn="IdEmployees" SourceColumnNullMapping="false" SourceVersion="Current" />
                      <Parameter AllowDbNull="false" AutogeneratedName="" DataSourceName="" DbType="String" Direction="Input" ParameterName="@SCounter" Precision="0" ProviderType="NVarChar" Scale="0" Size="0" SourceColumn="SCounter" SourceColumnNullMapping="false" SourceVersion="Current" />
                    </Parameters>
                  </DbCommand>
                </InsertCommand>
                <SelectCommand>
                  <DbCommand CommandType="Text" ModifiedByUser="false">
                    <CommandText>SELECT IdEmployees, SCounter FROM dbo.Employee_Counter</CommandText>
                    <Parameters />
                  </DbCommand>
                </SelectCommand>
              </DbSource>
            </MainSource>
            <Mappings>
              <Mapping SourceColumn="IdEmployees" DataSetColumn="IdEmployees" />
              <Mapping SourceColumn="SCounter" DataSetColumn="SCounter" />
            </Mappings>
            <Sources />
          </TableAdapter>
        </Tables>
        <Sources />
      </DataSource>
    </xs:appinfo>
  </xs:annotation>
  <xs:element name="qmsDataSet" msdata:IsDataSet="true" msdata:UseCurrentLocale="true" msprop:EnableTableAdapterManager="True" msprop:Generator_DataSetName="qmsDataSet" msprop:Generator_UserDSName="qmsDataSet">
    <xs:complexType>
      <xs:choice minOccurs="0" maxOccurs="unbounded">
        <xs:element name="Counter" msprop:Generator_TableClassName="CounterDataTable" msprop:Generator_TableVarName="tableCounter" msprop:Generator_TablePropName="Counter" msprop:Generator_RowDeletingName="CounterRowDeleting" msprop:Generator_RowChangingName="CounterRowChanging" msprop:Generator_RowEvHandlerName="CounterRowChangeEventHandler" msprop:Generator_RowDeletedName="CounterRowDeleted" msprop:Generator_UserTableName="Counter" msprop:Generator_RowChangedName="CounterRowChanged" msprop:Generator_RowEvArgName="CounterRowChangeEvent" msprop:Generator_RowClassName="CounterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdCounter" msprop:Generator_ColumnVarNameInTable="columnIdCounter" msprop:Generator_ColumnPropNameInRow="IdCounter" msprop:Generator_ColumnPropNameInTable="IdCounterColumn" msprop:Generator_UserColumnName="IdCounter">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="NameServices" msprop:Generator_ColumnVarNameInTable="columnNameServices" msprop:Generator_ColumnPropNameInRow="NameServices" msprop:Generator_ColumnPropNameInTable="NameServicesColumn" msprop:Generator_UserColumnName="NameServices">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Counter_Customer" msprop:Generator_TableClassName="Counter_CustomerDataTable" msprop:Generator_TableVarName="tableCounter_Customer" msprop:Generator_TablePropName="Counter_Customer" msprop:Generator_RowDeletingName="Counter_CustomerRowDeleting" msprop:Generator_RowChangingName="Counter_CustomerRowChanging" msprop:Generator_RowEvHandlerName="Counter_CustomerRowChangeEventHandler" msprop:Generator_RowDeletedName="Counter_CustomerRowDeleted" msprop:Generator_UserTableName="Counter_Customer" msprop:Generator_RowChangedName="Counter_CustomerRowChanged" msprop:Generator_RowEvArgName="Counter_CustomerRowChangeEvent" msprop:Generator_RowClassName="Counter_CustomerRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="SCounter" msprop:Generator_ColumnVarNameInTable="columnSCounter" msprop:Generator_ColumnPropNameInRow="SCounter" msprop:Generator_ColumnPropNameInTable="SCounterColumn" msprop:Generator_UserColumnName="SCounter">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
              <xs:element name="IdCustomer" msprop:Generator_ColumnVarNameInTable="columnIdCustomer" msprop:Generator_ColumnPropNameInRow="IdCustomer" msprop:Generator_ColumnPropNameInTable="IdCustomerColumn" msprop:Generator_UserColumnName="IdCustomer" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="CustomerCurrent" msprop:Generator_TableClassName="CustomerCurrentDataTable" msprop:Generator_TableVarName="tableCustomerCurrent" msprop:Generator_TablePropName="CustomerCurrent" msprop:Generator_RowDeletingName="CustomerCurrentRowDeleting" msprop:Generator_RowChangingName="CustomerCurrentRowChanging" msprop:Generator_RowEvHandlerName="CustomerCurrentRowChangeEventHandler" msprop:Generator_RowDeletedName="CustomerCurrentRowDeleted" msprop:Generator_UserTableName="CustomerCurrent" msprop:Generator_RowChangedName="CustomerCurrentRowChanged" msprop:Generator_RowEvArgName="CustomerCurrentRowChangeEvent" msprop:Generator_RowClassName="CustomerCurrentRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdConstant" msprop:Generator_ColumnVarNameInTable="columnIdConstant" msprop:Generator_ColumnPropNameInRow="IdConstant" msprop:Generator_ColumnPropNameInTable="IdConstantColumn" msprop:Generator_UserColumnName="IdConstant" type="xs:int" />
              <xs:element name="IdCurrent" msprop:Generator_ColumnVarNameInTable="columnIdCurrent" msprop:Generator_ColumnPropNameInRow="IdCurrent" msprop:Generator_ColumnPropNameInTable="IdCurrentColumn" msprop:Generator_UserColumnName="IdCurrent" type="xs:int" />
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Employee" msprop:Generator_TableClassName="EmployeeDataTable" msprop:Generator_TableVarName="tableEmployee" msprop:Generator_TablePropName="Employee" msprop:Generator_RowDeletingName="EmployeeRowDeleting" msprop:Generator_RowChangingName="EmployeeRowChanging" msprop:Generator_RowEvHandlerName="EmployeeRowChangeEventHandler" msprop:Generator_RowDeletedName="EmployeeRowDeleted" msprop:Generator_UserTableName="Employee" msprop:Generator_RowChangedName="EmployeeRowChanged" msprop:Generator_RowEvArgName="EmployeeRowChangeEvent" msprop:Generator_RowClassName="EmployeeRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdEmployees" msprop:Generator_ColumnVarNameInTable="columnIdEmployees" msprop:Generator_ColumnPropNameInRow="IdEmployees" msprop:Generator_ColumnPropNameInTable="IdEmployeesColumn" msprop:Generator_UserColumnName="IdEmployees" type="xs:int" />
              <xs:element name="NameEmployees" msprop:Generator_ColumnVarNameInTable="columnNameEmployees" msprop:Generator_ColumnPropNameInRow="NameEmployees" msprop:Generator_ColumnPropNameInTable="NameEmployeesColumn" msprop:Generator_UserColumnName="NameEmployees">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="50" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
        <xs:element name="Employee_Counter" msprop:Generator_TableClassName="Employee_CounterDataTable" msprop:Generator_TableVarName="tableEmployee_Counter" msprop:Generator_TablePropName="Employee_Counter" msprop:Generator_RowDeletingName="Employee_CounterRowDeleting" msprop:Generator_RowChangingName="Employee_CounterRowChanging" msprop:Generator_RowEvHandlerName="Employee_CounterRowChangeEventHandler" msprop:Generator_RowDeletedName="Employee_CounterRowDeleted" msprop:Generator_UserTableName="Employee_Counter" msprop:Generator_RowChangedName="Employee_CounterRowChanged" msprop:Generator_RowEvArgName="Employee_CounterRowChangeEvent" msprop:Generator_RowClassName="Employee_CounterRow">
          <xs:complexType>
            <xs:sequence>
              <xs:element name="IdEmployees" msprop:Generator_ColumnVarNameInTable="columnIdEmployees" msprop:Generator_ColumnPropNameInRow="IdEmployees" msprop:Generator_ColumnPropNameInTable="IdEmployeesColumn" msprop:Generator_UserColumnName="IdEmployees" type="xs:int" />
              <xs:element name="SCounter" msprop:Generator_ColumnVarNameInTable="columnSCounter" msprop:Generator_ColumnPropNameInRow="SCounter" msprop:Generator_ColumnPropNameInTable="SCounterColumn" msprop:Generator_UserColumnName="SCounter">
                <xs:simpleType>
                  <xs:restriction base="xs:string">
                    <xs:maxLength value="10" />
                  </xs:restriction>
                </xs:simpleType>
              </xs:element>
            </xs:sequence>
          </xs:complexType>
        </xs:element>
      </xs:choice>
    </xs:complexType>
    <xs:unique name="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Counter" />
      <xs:field xpath="mstns:IdCounter" />
    </xs:unique>
    <xs:unique name="CustomerCurrent_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:CustomerCurrent" />
      <xs:field xpath="mstns:IdConstant" />
    </xs:unique>
    <xs:unique name="Employee_Constraint1" msdata:ConstraintName="Constraint1" msdata:PrimaryKey="true">
      <xs:selector xpath=".//mstns:Employee" />
      <xs:field xpath="mstns:IdEmployees" />
    </xs:unique>
  </xs:element>
  <xs:annotation>
    <xs:appinfo>
      <msdata:Relationship name="FK_Counter_Customer_Counter" msdata:parent="Counter" msdata:child="Counter_Customer" msdata:parentkey="IdCounter" msdata:childkey="SCounter" msprop:Generator_UserChildTable="Counter_Customer" msprop:Generator_ChildPropName="GetCounter_CustomerRows" msprop:Generator_UserRelationName="FK_Counter_Customer_Counter" msprop:Generator_ParentPropName="CounterRow" msprop:Generator_RelationVarName="relationFK_Counter_Customer_Counter" msprop:Generator_UserParentTable="Counter" />
      <msdata:Relationship name="FK_Employee_Counter_Counter" msdata:parent="Counter" msdata:child="Employee_Counter" msdata:parentkey="IdCounter" msdata:childkey="SCounter" msprop:Generator_UserChildTable="Employee_Counter" msprop:Generator_ChildPropName="GetEmployee_CounterRows" msprop:Generator_UserRelationName="FK_Employee_Counter_Counter" msprop:Generator_ParentPropName="CounterRow" msprop:Generator_RelationVarName="relationFK_Employee_Counter_Counter" msprop:Generator_UserParentTable="Counter" />
      <msdata:Relationship name="FK_Employee_Counter_Employee" msdata:parent="Employee" msdata:child="Employee_Counter" msdata:parentkey="IdEmployees" msdata:childkey="IdEmployees" msprop:Generator_UserChildTable="Employee_Counter" msprop:Generator_ChildPropName="GetEmployee_CounterRows" msprop:Generator_UserRelationName="FK_Employee_Counter_Employee" msprop:Generator_ParentPropName="EmployeeRow" msprop:Generator_RelationVarName="relationFK_Employee_Counter_Employee" msprop:Generator_UserParentTable="Employee" />
    </xs:appinfo>
  </xs:annotation>
</xs:schema>